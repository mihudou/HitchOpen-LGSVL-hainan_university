<?xml version="1.0"?>
<root main_tree_to_execute="BehaviorTree">
    <BehaviorTree ID="BehaviorTree">
        <ReactiveSequence>
            <ReactiveSequence>
                <ForceSuccess>
					<Action ID="SetPush2PassInactive" push2pass_cmd="{push2pass_cmd}"/>
				</ForceSuccess>
                <ForceSuccess>
                    <ReactiveFallback>
                        <Condition ID="IfRaceControlTimeout" rde_inputs="{rde_inputs}" rde_params="{rde_params}"/>
                        <Action ID="SetFlags" current_flags="{current_flags}" current_round_speed="{current_round_speed}" previous_flags="{previous_flags}" rde_inputs="{rde_inputs}"/>
                    </ReactiveFallback>
                </ForceSuccess>
                <ForceSuccess>
                    <ReactiveFallback>
                        <Condition ID="IfLocalizationTimeout" rde_inputs="{rde_inputs}" rde_params="{rde_params}"/>
                        <Condition ID="IfLocalizationEmergency" rde_inputs="{rde_inputs}" rde_params="{rde_params}"/>
                        <ReactiveSequence>
                            <Action ID="SetCarState" current_car_state="{current_car_state}" current_ttl_index="{current_ttl_index}" left_ttl_index="{left_ttl_index}" previous_car_state="{previous_car_state}" rde_inputs="{rde_inputs}" rde_params="{rde_params}" right_ttl_index="{right_ttl_index}"/>
                            <ForceSuccess>
                                <ReactiveSequence>
                                    <Condition ID="IfCrossedSf" current_car_state="{current_car_state}" previous_car_state="{previous_car_state}" rde_params="{rde_params}"/>
                                    <Action ID="IncrementLap" current_car_state="{current_car_state}" num_laps="{num_laps}" previous_car_state="{previous_car_state}"/>
                                </ReactiveSequence>
                            </ForceSuccess>
                        </ReactiveSequence>
                    </ReactiveFallback>
                </ForceSuccess>
            </ReactiveSequence>
            <ReactiveFallback>
                <ReactiveSequence>
                    <ReactiveFallback>
                        <Condition ID="IfPurpleFlag" current_flags="{current_flags}"/>
                        <Condition ID="IfLowLevelFaultEmergencyStop" rde_inputs="{rde_inputs}" rde_params="{rde_params}"/>
                        <Condition ID="IfInputManualCommandEmergency" rde_inputs="{rde_inputs}" rde_params="{rde_params}"/>
                    </ReactiveFallback>
                    <Action ID="StopCarEmergency" rde_params="{rde_params}" speed_type="{speed_type}" stop_type="{stop_type}" strategy_type="{strategy_type}"/>
                    <Action ID="SetNoGap" gap_type="{gap_type}" rde_params="{rde_params}"/>
                </ReactiveSequence>
                <ReactiveSequence>
                    <ReactiveFallback>
                        <Condition ID="IfLocalizationEmergency" rde_inputs="{rde_inputs}" rde_params="{rde_params}"/>
                        <Condition ID="IfLowLevelFaultTimeout" rde_inputs="{rde_inputs}" rde_params="{rde_params}"/>
                        <Condition ID="IfLocalizationTimeout" rde_inputs="{rde_inputs}" rde_params="{rde_params}"/>
                        <Condition ID="IfLowLevelFaultImmediateStop" rde_inputs="{rde_inputs}" rde_params="{rde_params}"/>
                        <Condition ID="IfEkillFlag" current_flags="{current_flags}"/>
                    </ReactiveFallback>
                    <Action ID="StopCarImmediate" rde_params="{rde_params}" speed_type="{speed_type}" stop_type="{stop_type}" strategy_type="{strategy_type}"/>
                    <Action ID="SetNoGap" gap_type="{gap_type}" rde_params="{rde_params}"/>
                </ReactiveSequence>
                <ReactiveSequence>
                    <ReactiveFallback>
                        <Condition ID="IfLowLevelFaultSafeStop" rde_inputs="{rde_inputs}" rde_params="{rde_params}"/>
                        <Condition ID="IfInputManualCommandTimeout" rde_inputs="{rde_inputs}" rde_params="{rde_params}"/>
                        <Condition ID="IfRaceControlTimeout" rde_inputs="{rde_inputs}" rde_params="{rde_params}"/>
                        <Condition ID="IfNoTrackFlag" current_flags="{current_flags}"/>
                        <Condition ID="IfRedFlag" current_flags="{current_flags}"/>
                        <Condition ID="IfStopFlag" current_flags="{current_flags}"/>
                        <Condition ID="IfOrangeFlag" current_flags="{current_flags}"/>
                        <ReactiveSequence>
                            <Condition ID="IfBlackFlag" current_flags="{current_flags}"/>
                            <Condition ID="IfInPitBox" current_car_state="{current_car_state}" pit_ttl_index="{pit_ttl_index}"/>
                        </ReactiveSequence>
                        <ReactiveSequence>
                            <Condition ID="IfCheckeredFlag" current_flags="{current_flags}"/>
                            <Condition ID="IfInPitBox" current_car_state="{current_car_state}" pit_ttl_index="{pit_ttl_index}"/>
                        </ReactiveSequence>
                    </ReactiveFallback>
                    <Action ID="StopCarSafe" rde_params="{rde_params}" speed_type="{speed_type}" stop_type="{stop_type}" strategy_type="{strategy_type}"/>
                    <Action ID="SetNoGap" gap_type="{gap_type}" rde_params="{rde_params}"/>
                </ReactiveSequence>
                <ReactiveSequence>
                    <ReactiveFallback>
                        <Condition ID="IfInPitBox" current_car_state="{current_car_state}" pit_ttl_index="{pit_ttl_index}"/>
                        <Condition ID="IfInPitLane" current_car_state="{current_car_state}" pit_ttl_index="{pit_ttl_index}"/>
                    </ReactiveFallback>
                    <Action ID="SetPitLaneSpeed" rde_params="{rde_params}" speed_type="{speed_type}" stop_type="{stop_type}" strategy_type="{strategy_type}"/>
                    <Action ID="SetNoGap" gap_type="{gap_type}" rde_params="{rde_params}"/>
                </ReactiveSequence>
                <ReactiveSequence>
                    <ReactiveFallback>
                        <Condition ID="IfInPitRoad" current_car_state="{current_car_state}" pit_ttl_index="{pit_ttl_index}"/>
                        <ReactiveSequence>
                            <Condition ID="IfBlackFlag" current_flags="{current_flags}"/>
                            <Condition ID="IfInPitEntrance" current_car_state="{current_car_state}" pit_ttl_index="{pit_ttl_index}"/>
                        </ReactiveSequence>
                        <ReactiveSequence>
                            <Condition ID="IfCheckeredFlag" current_flags="{current_flags}"/>
                            <Condition ID="IfInPitEntrance" current_car_state="{current_car_state}" pit_ttl_index="{pit_ttl_index}"/>
                        </ReactiveSequence>
                    </ReactiveFallback>
                    <Action ID="SetPitRoadSpeed" rde_params="{rde_params}" speed_type="{speed_type}" stop_type="{stop_type}" strategy_type="{strategy_type}"/>
                    <Action ID="SetNoGap" gap_type="{gap_type}" rde_params="{rde_params}"/>
                </ReactiveSequence>
                <ReactiveSequence>
                    <ReactiveFallback>
                        <Condition ID="IfBlackFlag" current_flags="{current_flags}"/>
                        <Condition ID="IfCheckeredFlag" current_flags="{current_flags}"/>
                        <Condition ID="IfYellowFlag" current_flags="{current_flags}"/>
                        <Condition ID="IfFcyFlag" current_flags="{current_flags}"/>
                    </ReactiveFallback>
                    <Action ID="SetYellowSpeed" rde_params="{rde_params}" speed_type="{speed_type}" stop_type="{stop_type}" strategy_type="{strategy_type}"/>
                    <Action ID="SetNoGap" gap_type="{gap_type}" rde_params="{rde_params}"/>
                </ReactiveSequence>
                <ReactiveSequence>
                    <ReactiveFallback>
                        <Condition ID="IfGreenFlag" current_flags="{current_flags}"/>
                        <Condition ID="IfWgreenFlag" current_flags="{current_flags}"/>
                    </ReactiveFallback>
                    <Action ID="SetGreenSpeed" speed_type="{speed_type}" stop_type="{stop_type}" strategy_type="{strategy_type}"/>
                    <Action ID="SetNoGap" gap_type="{gap_type}" rde_params="{rde_params}"/>
                </ReactiveSequence>
                <AlwaysSuccess/>
            </ReactiveFallback>
            <Action ID="SetSpeedLimit" current_round_speed="{current_round_speed}" rde_params="{rde_params}" speed_limit="{speed_limit}" speed_type="{speed_type}"/>
            <Action ID="SetGap" gap_type="{gap_type}" rde_params="{rde_params}" target_gap="{target_gap}"/>
            <ForceSuccess>
                <ReactiveSequence>
                    <Condition ID="IfTspEnabled" rde_params="{rde_params}"/>
                    <ReactiveFallback>
                        <Condition ID="IfInPitTtl" current_car_state="{current_car_state}" pit_ttl_index="{pit_ttl_index}"/>
                        <Action ID="ReduceToTspSpeed" current_car_state="{current_car_state}" rde_params="{rde_params}" speed_limit="{speed_limit}" tsp_index="{tsp_index}"/>
                    </ReactiveFallback>
                </ReactiveSequence>
            </ForceSuccess>
            <ForceSuccess>
                <ReactiveFallback>
                    <ReactiveSequence>
                        <Condition ID="IfScaleFactorEnabled" rde_params="{rde_params}"/>
                        <ReactiveFallback>
                            <ReactiveSequence>
                                <Condition ID="IfInPitTtl" current_car_state="{current_car_state}" pit_ttl_index="{pit_ttl_index}"/>
                                <Action ID="ResetScaleFactor" rde_params="{rde_params}" scale_factor="{scale_factor}"/>
                            </ReactiveSequence>
                            <Action ID="SetScaleFactorFromLookup" current_car_state="{current_car_state}" rde_params="{rde_params}" scale_factor="{scale_factor}" sf_index="{sf_index}"/>
                        </ReactiveFallback>
                    </ReactiveSequence>
                    <Action ID="ResetScaleFactor" rde_params="{rde_params}" scale_factor="{scale_factor}"/>
                </ReactiveFallback>
            </ForceSuccess>
            <ReactiveFallback>
                <ReactiveSequence>
                    <Condition ID="IfInputManualCommandTimeout" rde_inputs="{rde_inputs}" rde_params="{rde_params}"/>
                    <Action ID="GoJoystickAutonomous" auto_enabled="{auto_enabled}" limit_auto_throttle="{limit_auto_throttle}" rde_params="{rde_params}"/>
                </ReactiveSequence>
                <Action ID="KeepJoystickState" auto_enabled="{auto_enabled}" limit_auto_throttle="{limit_auto_throttle}" rde_inputs="{rde_inputs}"/>
            </ReactiveFallback>
            <ForceSuccess>
                <ReactiveFallback>
                    <ReactiveSequence>
                        <Condition ID="IfInPitTtl" current_car_state="{current_car_state}" pit_ttl_index="{pit_ttl_index}"/>
                        <Inverter>
                            <Condition ID="IfBlackFlag" current_flags="{current_flags}"/>
                        </Inverter>
                        <Inverter>
                            <Condition ID="IfCheckeredFlag" current_flags="{current_flags}"/>
                        </Inverter>
                        <Condition ID="IfInPitExit" current_car_state="{current_car_state}" pit_ttl_index="{pit_ttl_index}"/>
                        <Action ID="SetRaceTtlIndex" rde_params="{rde_params}" selected_ttl="{selected_ttl}"/>
                    </ReactiveSequence>
                    <ReactiveSequence>
                        <Inverter>
                            <Condition ID="IfInPitTtl" current_car_state="{current_car_state}" pit_ttl_index="{pit_ttl_index}"/>
                        </Inverter>
                        <Condition ID="IfBlackFlag" current_flags="{current_flags}"/>
                        <Condition ID="IfInPitEntrance" current_car_state="{current_car_state}" pit_ttl_index="{pit_ttl_index}"/>
                        <Action ID="SetPitTtlIndex" rde_params="{rde_params}" selected_ttl="{selected_ttl}"/>
                    </ReactiveSequence>
                    <ReactiveSequence>
                        <Inverter>
                            <Condition ID="IfInPitTtl" current_car_state="{current_car_state}" pit_ttl_index="{pit_ttl_index}"/>
                        </Inverter>
                        <Condition ID="IfCheckeredFlag" current_flags="{current_flags}"/>
                        <Condition ID="IfInPitEntrance" current_car_state="{current_car_state}" pit_ttl_index="{pit_ttl_index}"/>
                        <Action ID="SetPitTtlIndex" rde_params="{rde_params}" selected_ttl="{selected_ttl}"/>
                    </ReactiveSequence>
                    <ReactiveSequence>
                        <Condition ID="IfBlackFlag" current_flags="{current_flags}"/>
                        <Inverter>
                            <Condition ID="IfInPitTtl" current_car_state="{current_car_state}" pit_ttl_index="{pit_ttl_index}"/>
                        </Inverter>
                        <Condition ID="IfInStraight" current_car_state="{current_car_state}" pit_ttl_index="{pit_ttl_index}"/>
                        <Action ID="SetRaceTtlIndex" rde_params="{rde_params}" selected_ttl="{selected_ttl}"/>
                    </ReactiveSequence>
                    <ReactiveSequence>
                        <Condition ID="IfCheckeredFlag" current_flags="{current_flags}"/>
                        <Inverter>
                            <Condition ID="IfInPitTtl" current_car_state="{current_car_state}" pit_ttl_index="{pit_ttl_index}"/>
                        </Inverter>
                        <Condition ID="IfInStraight" current_car_state="{current_car_state}" pit_ttl_index="{pit_ttl_index}"/>
                        <Action ID="SetRaceTtlIndex" rde_params="{rde_params}" selected_ttl="{selected_ttl}"/>
                    </ReactiveSequence>
                </ReactiveFallback>
            </ForceSuccess>
            <Action ID="SetTtlIndex" left_ttl_index="{left_ttl_index}" optimal_ttl_index="{optimal_ttl_index}" output_ttl_index="{output_ttl_index}" pit_ttl_index="{pit_ttl_index}" race_ttl_index="{race_ttl_index}" rde_params="{rde_params}" right_ttl_index="{right_ttl_index}" selected_ttl="{selected_ttl}"/>
        </ReactiveSequence>
    </BehaviorTree>
</root>
